<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<style>
   #map_wrapper_div {
      height: 400px;
   }
   #school_map {
      width: 100%;
      height: 100%;
   }
</style>
 
<div class="row">
   <div class="col-12">
      <div id="map_wrapper_div">
         <div id="school_map"></div>
   </div>
</div>

<script>
   
   jQuery(function() {
      // Asynchronously Load the map API 
      var script = document.createElement('script');
      script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyBc9pQMFW7zPw3OyX8nTdP1m82pjtjPsTE&callback=initialize";
      document.body.appendChild(script);
   });

   function initialize() {
      var map;
      var bounds = new google.maps.LatLngBounds();
      var mapOptions = {
         mapTypeId: 'roadmap'
      };

      // Display a map on the page
      map = new google.maps.Map(document.getElementById("school_map"), mapOptions);
      map.setTilt(45);

      // Multiple Markers
      var markers = {{ data.loc|raw }};

      // Info Window Content
      var infoWindowContent =  {{ data.name|raw }};

      // Display multiple markers on a map
      var infoWindow = new google.maps.InfoWindow(), marker, i;

      // Loop through our array of markers & place each one on the map  
      for( i = 0; i < markers.length; i++ ) {
         var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
         bounds.extend(position);
         marker = new google.maps.Marker({
            position: position,
            map: map,
            title: markers[i][0]
         });

         // Each marker to have an info window    
         google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
               infoWindow.setContent(infoWindowContent[i][0]);
               infoWindow.open(map, marker);
            }
         })(marker, i));

         // Automatically center the map fitting all markers on the screen
         map.fitBounds(bounds);
      }

      // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
      var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
         this.setZoom(9);
         google.maps.event.removeListener(boundsListener);
      });
   }
</script>